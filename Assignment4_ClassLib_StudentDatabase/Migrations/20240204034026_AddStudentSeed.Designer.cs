// <auto-generated />
using Assignment4_ClassLib_StudentDatabase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment4_ClassLib_StudentDatabase.Migrations
{
    [DbContext(typeof(StudentContext))]
    [Migration("20240204034026_AddStudentSeed")]
    partial class AddStudentSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assignment4_ClassLib_StudentDatabase.Entities.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MajorID")
                        .HasColumnType("int");

                    b.Property<string>("Professor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Assignment4_ClassLib_StudentDatabase.Entities.Major", b =>
                {
                    b.Property<int>("MajorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MajorID"));

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("MajorID");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("Assignment4_ClassLib_StudentDatabase.Entities.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<int>("ClassOf")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MajorID")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            ClassOf = 2025,
                            FirstName = "Nhi",
                            LastName = "Nguyen",
                            MajorID = 0,
                            PhoneNumber = "5132887145"
                        },
                        new
                        {
                            StudentID = 2,
                            ClassOf = 2026,
                            FirstName = "Elena",
                            LastName = "Dutch",
                            MajorID = 0,
                            PhoneNumber = "5133099222"
                        },
                        new
                        {
                            StudentID = 3,
                            ClassOf = 2028,
                            FirstName = "Queen",
                            LastName = "Thomas",
                            MajorID = 0,
                            PhoneNumber = "6048891983"
                        },
                        new
                        {
                            StudentID = 4,
                            ClassOf = 2018,
                            FirstName = "Jack",
                            LastName = "Thomas",
                            MajorID = 0,
                            PhoneNumber = "5132896788"
                        },
                        new
                        {
                            StudentID = 5,
                            ClassOf = 2020,
                            FirstName = "Mina",
                            LastName = "Le",
                            MajorID = 0,
                            PhoneNumber = "5458398299"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
